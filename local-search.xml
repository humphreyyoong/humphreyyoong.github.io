<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>macOS 环境下 Nativefier 生成的软件报 A JavaScript error occurred in the main proces 错误</title>
    <link href="/2020/07/06/macOS-%E7%8E%AF%E5%A2%83%E4%B8%8BNativefier-%E7%94%9F%E6%88%90%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%8A%A5-A-JavaScript-error-occurred-in-the-main-proces-%E9%94%99%E8%AF%AF/"/>
    <url>/2020/07/06/macOS-%E7%8E%AF%E5%A2%83%E4%B8%8BNativefier-%E7%94%9F%E6%88%90%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%8A%A5-A-JavaScript-error-occurred-in-the-main-proces-%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我想把 regex101 封装成本地应用，于是装了 Nativefier ，但是用 <code>nativefier &#39;regex101.com&#39;</code>这个命令生成本地应用后，打开该应用，弹窗报如下错误<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/a-javascript-error-occurred-in-the%20main-process.png" alt="a-javascript-error-occurred-in-the main-process"></p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">A JavaScript error occurred <span class="hljs-keyword">in</span> the main process<br><br>Uncaught Exception:<br>Error: Image could not be created from /Users/apple/Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript-darwin-x64/Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript.app/Contents/Resources/app/icon.png<br>    at Object.createMainWindow (/Users/apple/Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript-darwin-x64/Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript.app/Contents/Resources/app/lib/webpack:/src/components/mainWindow.ts:105:22)<br>    at App.&lt;anonymous&gt; (/Users/apple/Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript-darwin-x64/Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript.app/Contents/Resources/app/lib/webpack:/src/main.ts:149:18)<br>    at App.emit (events.js:223:5)<br></code></pre></td></tr></table></figure><h2 id="办法"><a href="#办法" class="headerlink" title="办法"></a>办法</h2><p>从弹窗可以看出错误是由 icon.png 文件创建失败引起的。<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/a-javascript-error-occurred-in-the%20main-process-icon.png" alt="a-javascript-error-occurred-in-the main-process-icon"></p><p>所以，只要在报错的路径上补上这个生成失败的文件即可。下面来看具体操作：找到用 Nativefier 生成的软件的文件夹，并打开，比如我现在生成的软件文件夹是 Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript-darwin-x64，打开它；然后找到以 .app 为后缀的文件，比如我的是 Online regex tester and debugger PHP, PCRE, Python, Golang and JavaScript.app，选中它，右键后，点击显示包内容；依次进入 Contents –&gt; Resources，找到后缀为 .icns 的图片，把它转换成 .png 格式的图片的同时保留原文件，可以用 <a href="https://cloudconvert.com/icns-to-png">cloudconvert</a> 这个网站来转换，也可以自己找其他的网站，能把 .icns 文件转换 .png 文件就行；最后，把这个转换过的 .png 重命名为 icon.png 后，放入当前路径下的 app 文件夹即可解决问题。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>怎样才能避免熬夜和赖床</title>
    <link href="/2020/06/26/%E6%80%8E%E6%A0%B7%E6%89%8D%E8%83%BD%E9%81%BF%E5%85%8D%E7%86%AC%E5%A4%9C%E5%92%8C%E8%B5%96%E5%BA%8A/"/>
    <url>/2020/06/26/%E6%80%8E%E6%A0%B7%E6%89%8D%E8%83%BD%E9%81%BF%E5%85%8D%E7%86%AC%E5%A4%9C%E5%92%8C%E8%B5%96%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<p>要避免熬夜和赖床，首先要判断自己是否熬夜和赖床。</p><h2 id="判定自己是否熬夜和赖床"><a href="#判定自己是否熬夜和赖床" class="headerlink" title="判定自己是否熬夜和赖床"></a>判定自己是否熬夜和赖床</h2><p>要判断自己是否熬夜和赖床，首先要明确它们的定义。在写这篇文章之前，感觉自己好想知道，但认真琢磨过后发现知道其实是错觉，就像<a href="https://en.wikipedia.org/wiki/Augustine_of_Hippo">奥古斯丁</a>所说，</p><blockquote><p>What then is time? If no one asks me, I know what it is. If I wish to explain it to him who asks, I do not know.<br>我知道时间是什么,如果你不问我的话,但如果你问我,时间是什么?我便不知道了。</p></blockquote><p>把熬夜翻译成 ‘Stay up late’，在谷歌没有找到相关内容，在维基百科也没有找到相关内容，这时我意识到英文的世界里是没有熬夜这个概念的，而我们之所以有这个概念是因为我们有中医，就像‘上火’一样。以‘熬夜’为关键词进行搜索，关于熬夜定义的内容比较少。其中百度百科的定义是：指忍受困乏，彻夜或深夜不睡觉就称之为熬夜。阅读过张遇升的《怎样获得高质量睡眠》，知道每个人睡眠节律是不一样的，所以每个人入睡的时间也不一样。根据以上的内容并结合自己的思考，我得出下面熬夜的定义。</p><blockquote><p>在到了符合自己睡眠节律的入睡时间，忍受困乏，彻夜或深夜不睡觉就称之为熬夜</p></blockquote><p>而赖床的定义就比较简单了，百度百科给出的定义是</p><blockquote><p>赖床，是指由于各种原因，早上醒来却不愿意起床，喜欢在床上多躺一会儿的行为，通常被叫做赖床。</p></blockquote><p>有了这两个定义，就很容易判断了，首先，确定自己的睡眠节律，下面是《怎样获得高质量睡眠》这门课中判断自己睡眠节律的方法</p><blockquote><p>你可以找休闲的一天，比如周末。你可以按照喜欢的方式，安排一天的生活，比如出去走一走，逛逛公园、爬爬山，看个电影，做个按摩，让自己放松下来，不要做特别刺激或者挑战的事。然后有意识地注意一下你在晚上什么时间会开始觉得困，然后在那个时点上床睡觉。不要给自己任何的压力，睡到自然醒。然后记录下整个的时长和节律。</p></blockquote><p>这种方法我试了，大概在晚上十点半到十一点半的时候我就会觉得特别困，那么这个时间就是我睡眠节律的入睡时间。在相对自然的状态下，我睡到六点到七点就能自然醒，那么这个就是我睡眠节律的起床时间。接着就是根据自己的睡眠节律判断自己是否熬夜和懒床。比如我，在晚上十点半到十一点半的时候困了，却硬撑，忍困不睡，那就是在熬夜了，而到了早上六点到七点的时候已经自然醒了，而我没有立即起来，那我就是在赖床了。</p><h2 id="这样能避免熬夜和赖床"><a href="#这样能避免熬夜和赖床" class="headerlink" title="这样能避免熬夜和赖床"></a>这样能避免熬夜和赖床</h2><ol><li><p>不赖床从不熬夜开始<br> 要解决赖床的问题，最关键的是不熬夜，睡够了自然就能起来了。</p></li><li><p>把手机放在自己够不到的地方<br> 睡觉的时候，如果手机放在床头或其他自己够得着的地方，自己很容易会不由自主地拿起手机来看。由于手机屏幕对人体的刺激，再加上手机内容的刺激，使得疲惫的大脑越发精神，特别是在刚开始决定不熬夜的时候。</p></li><li><p>关闭通知<br>在床上的时候，很容易因为通知而拿起手机，况且现在的通知不止一则，各种震惊，各种99.99%。尽量把这些垃圾通知都关闭，如果实在有不能关的通知或者懒得关，可以开启手机指定时间的夜间勿扰功能。</p></li><li><p>利用他律<br>理想很丰满，现实很骨感，由于各种原因很难保证不赖床，所以我想了个办法，可以试试，很简单，我睡上铺，桌子在下面，入睡的时候我就把手机丢在桌上，早上的时候，由于闹钟响了，不想吵到舍友，但手机又在床下，我够不着，所以就必须下床，在下床关闹钟的时候，自然也就起来了。</p></li><li><p>路由器设置为自动断网<br>可以买一个能在指定时间断网的路由器，像小米，华为等的路由器都有类似的功能，如果家里有这样的路由器，把这个功能用起来，当自己在刷手机忘记时间时，断网就可以在我们沉浸在信息海洋里，忘记时间时，拉我们一把。</p></li><li><p>用软件打败软件<br>很多软件设计出来就是为了吸引注意力，提高流量，人很难通过自己的自觉来控制自己不玩，所以想到的办法就是用软件去打败。有了这个想法，我就去 App Store 上搜，果然找到了我想要的软件，那就是 <a href="https://sleeptown.seekrtech.com/">Sleep Town</a>。下面是官方的宣传片，大致了解一下，也可以下载下来试试</p><iframe src="//player.bilibili.com/player.html?aid=711216821&bvid=BV1cD4y1S72r&cid=206124138&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="600" > </iframe>这是一个把睡觉游戏化的软件。根据睡眠节律设置好入睡时间和起床时间，要睡觉的时候软件会触发弹窗通知，提醒我们该睡觉了，这时点击入睡按钮，就可以在软件里面开始建房子，这个过程中如果退出软件或查看其他软件，房子都会被摧毁，因为不想房子被摧毁，就乖乖去睡觉了。到了起床时间，它会触发闹钟，这个闹钟和平常的闹钟不太一样，它只会响5分钟，在这5种内如果没有起床，快要建成的建筑物就会被摧毁，而且起来后，需要摇很多下手机，只有把进度条摇满了才算起床成功。这样的软件设计使得熬夜和赖床离我而去。当然你也可以试试其他软件。</li></ol><p>以上是我平时的思考和经验总结，不含任何恰饭内容，如有不足之处欢迎评论指正。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li><a href="https://www.biji.com/pwa/#/course/jvwNqE9ZL10K4E0sq7VG7Pp8mDnRWo">张遇升.怎样获得高质量睡眠</a></li><li><a href="https://baike.baidu.com/item/%E7%86%AC%E5%A4%9C/2802">百度百科.熬夜</a></li><li><a href="https://baike.baidu.com/item/%E8%B5%96%E5%BA%8A/3092000#:~:text=%E8%B5%96%E5%BA%8A%EF%BC%8C%E6%98%AF%E6%8C%87%E7%94%B1%E4%BA%8E,5%E5%88%86%E9%92%9F%E8%82%AF%E5%AE%9A%E6%B2%A1%E9%97%AE%E9%A2%98%E3%80%82">百度百科.赖床</a></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Bingo 就业管理系统</title>
    <link href="/2020/06/08/Bingo-%E5%B0%B1%E4%B8%9A%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <url>/2020/06/08/Bingo-%E5%B0%B1%E4%B8%9A%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p>项目演示：</p><blockquote><p><a href="http://bingo.humphreyyoong.com/">bingo.humphreyyoong.com</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>巨制</tag>
      
      <tag>Java</tag>
      
      <tag>Tomcat</tag>
      
      <tag>JSP</tag>
      
      <tag>HTML</tag>
      
      <tag>JS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>topic:refs/remotes/origin/topic 报错</title>
    <link href="/2020/05/31/%E5%9C%A8%E3%80%8Apro%20git%E3%80%8B%E5%BC%95%E7%94%A8%E6%A0%BC%E5%BC%8F%E6%8E%A8%E9%80%81%E8%BF%99%E8%8A%82%E4%B8%AD%E5%87%BA%E7%8E%B0-topic-refs-remotes-origin-topic-%E6%8A%A5%E9%94%99/"/>
    <url>/2020/05/31/%E5%9C%A8%E3%80%8Apro%20git%E3%80%8B%E5%BC%95%E7%94%A8%E6%A0%BC%E5%BC%8F%E6%8E%A8%E9%80%81%E8%BF%99%E8%8A%82%E4%B8%AD%E5%87%BA%E7%8E%B0-topic-refs-remotes-origin-topic-%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><p>在《Pro Git》 — 引用格式推送 这一小节中，有下面的命令和输出结果</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"> git fetch origin master:refs/remotes/origin/mymaster \<br> topic:refs/remotes/origin/topic<br>From git@github.com:schacon/simplegit<br> ! [rejected]        master     -&gt; origin/mymaster  (non fast forward)<br> * [new branch]      topic      -&gt; origin/topic<br></code></pre></td></tr></table></figure><p>但是自己在终端输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git fetch origin master:refs/remotes/origin/mymaster \ topic:refs/remotes/origin/topic<br></code></pre></td></tr></table></figure><p>却并没有出现和上面一样的结果，而是输出如下错误</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">fatal: invalid refspec <span class="hljs-string">&#x27; topic:refs/remotes/origin/topic&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h2><p>因为在 shell 命令中 <code>\</code> 表示换行继续输入的意思，也就是当命令太长的时候，可以用  <code>\</code> 对命令进行分割，转为下一行继续输入,而并不是 <code>git fetch</code> 命令用来分割参数的分割符。下面是正确的操作示范</p><ol><li>如果输入命令时不想换行，输入的时候把 <code>\</code> 去掉，如下 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git fetch origin master:refs/remotes/origin/mymaster topic:refs/remotes/origin/topic<br></code></pre></td></tr></table></figure></li><li>如果输入命令时觉得命令太长，想换行，就可以先输入 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git fetch origin master:refs/remotes/origin/mymaster \<br></code></pre></td></tr></table></figure> 按下 Enter 键，换行继续输入 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">topic:refs/remotes/origin/topic<br></code></pre></td></tr></table></figure>用以上两种中任意一个输入方式，就可以得到书中一样的结果了。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Pro Git</tag>
      
      <tag>Git</tag>
      
      <tag>shell</tag>
      
      <tag>引用规格</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 合并子模块改动没有出现 ‘merge following commits not found’</title>
    <link href="/2020/05/15/Git-%E5%90%88%E5%B9%B6%E5%AD%90%E6%A8%A1%E5%9D%97%E6%94%B9%E5%8A%A8%E6%B2%A1%E6%9C%89%E5%87%BA%E7%8E%B0-%E2%80%98merge-following-commits-not-found%E2%80%99/"/>
    <url>/2020/05/15/Git-%E5%90%88%E5%B9%B6%E5%AD%90%E6%A8%A1%E5%9D%97%E6%94%B9%E5%8A%A8%E6%B2%A1%E6%9C%89%E5%87%BA%E7%8E%B0-%E2%80%98merge-following-commits-not-found%E2%80%99/</url>
    
    <content type="html"><![CDATA[<h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><p>在《Pro Git》的第7章11节—— <em>合并子模块改动</em> 中，输入<code>git pull</code> 命令，并没有出现如下书中的结果</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">$ git pull<br>remote: Counting objects: 2, <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (1/1), <span class="hljs-keyword">done</span>.<br>remote: Total 2 (delta 1), reused 2 (delta 1)<br>Unpacking objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>From https://github.com/chaconinc/MainProject<br>   9a377d1..eb974f8  master     -&gt; origin/master<br>Fetching submodule DbConnector<br>warning: Failed to merge submodule DbConnector (merge following commits not found)<br>Auto-merging DbConnector<br>CONFLICT (submodule): Merge conflict <span class="hljs-keyword">in</span> DbConnector<br>Automatic merge failed; fix conflicts and <span class="hljs-keyword">then</span> commit the result.<br></code></pre></td></tr></table></figure><p>而是出现下面的内容，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git pull<br>remote: Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>remote: Total 2 (delta 0), reused 2 (delta 0), pack-reused 0<br>Unpacking objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>From https://github.com/username/MainProject<br>   faf7642..f3561d9  master     -&gt; origin/master<br>Fetching submodule DbConnector<br>From https://github.com/username/DbConnector<br>   42c390a..1a5f567  master     -&gt; origin/master<br>Updating faf7642..f3561d9<br>Fast-forward<br> DbConnector | 2 +-<br> 1 file changed, 1 insertion(+), 1 deletion(-)<br></code></pre></td></tr></table></figure><p>此结果中并没有出现 <code>merge following commits not found</code>，再查看子模块，发现远程分支与本地分支并没有产生冲突，而是分叉了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ graph<br>* a88a3be (HEAD -&gt; master) add <span class="hljs-built_in">return</span> 0;<br>| * 1a5f567 (origin/master, origin/HEAD) add <span class="hljs-built_in">return</span> 1;<br>|/<br>* 42c390a first commit<br></code></pre></td></tr></table></figure><h2 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h2><p>出现这个问题的原因是，没有在主项目中，提交子模块的修改。下面就来具体演示一下如何复现书本上的内容。新建一个 MainProject 文件夹，在里面新建一个 main.c 文件，在该文件中输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#inclue<span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>然后把 MainProject 文件夹初始化为 git 项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git init<br>Initialized empty Git repository <span class="hljs-keyword">in</span> /Users/apple/Git/MainProject/.git/<br><br>$ git add main.c<br><br>$ git commit -m <span class="hljs-string">&#x27;first commit&#x27;</span><br>[master (root-commit) 15a113b] first commit<br> 1 file changed, 4 insertions(+)<br> create mode 100644 main.c<br></code></pre></td></tr></table></figure><p>新建一个 DbConnector 文件夹，在里面新建一个 connector.c在该文件中输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DbConnector&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>初始化为 git 项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git init<br>Initialized empty Git repository <span class="hljs-keyword">in</span> /Users/apple/Git/DbConnector/.git/<br><br>$ git add connector.c<br><br>$ git commit -m <span class="hljs-string">&#x27;first commit&#x27;</span><br>[master (root-commit) 42c390a] first commit<br> 1 file changed, 4 insertions(+)<br> create mode 100644 main.c<br></code></pre></td></tr></table></figure><p>在 Github 中新建一个 DbConnector 的仓库，把本地的内容推送上去</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git remote add origin https://github.com/username/DbConnector.git<br><br>$ git push -u origin master<br>Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (3/3), 262 bytes | 262.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 3 (delta 0), reused 0 (delta 0)<br>To https://github.com/username/DbConnector.git<br> * [new branch]      master -&gt; master<br>Branch <span class="hljs-string">&#x27;master&#x27;</span> <span class="hljs-built_in">set</span> up to track remote branch <span class="hljs-string">&#x27;master&#x27;</span> from <span class="hljs-string">&#x27;origin&#x27;</span>.<br></code></pre></td></tr></table></figure><p>回到 MainProject，给它添加子模块，并提交</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git submodule add https://github.com/username/DbConnector.git<br>Cloning into <span class="hljs-string">&#x27;/Users/apple/Documents/Git/MainProject/DbConnector&#x27;</span>...<br>remote: Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0<br>Unpacking objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br><br>$ git commit -m <span class="hljs-string">&#x27;add submodule&#x27;</span><br>[master faf7642] add submodule<br> 2 files changed, 4 insertions(+)<br> create mode 100644 .gitmodules<br> create mode 160000 DbConnector<br></code></pre></td></tr></table></figure><p>在 Github中新建一个 MainProject 仓库，把本地的内容推送上去</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git remote add origin https://github.com/username/MainProject.git<br><br>$ git push -u origin master<br>Enumerating objects: 6, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (6/6), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (4/4), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (6/6), 595 bytes | 595.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 6 (delta 0), reused 0 (delta 0)<br>To https://github.com/username/MainProject.git<br> * [new branch]      master -&gt; master<br>Branch <span class="hljs-string">&#x27;master&#x27;</span> <span class="hljs-built_in">set</span> up to track remote branch <span class="hljs-string">&#x27;master&#x27;</span> from <span class="hljs-string">&#x27;origin&#x27;</span>.<br></code></pre></td></tr></table></figure><p>在 <em>本机的其它文件夹</em> 或 <em>别的计算机</em> 中克隆 MainProject</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git <span class="hljs-built_in">clone</span> --recursive https://github.com/username/MainProject.git<br>Cloning into <span class="hljs-string">&#x27;MainProject&#x27;</span>...<br>remote: Enumerating objects: 6, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (6/6), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (4/4), <span class="hljs-keyword">done</span>.<br>remote: Total 6 (delta 0), reused 6 (delta 0), pack-reused 0<br>Unpacking objects: 100% (6/6), <span class="hljs-keyword">done</span>.<br>Submodule <span class="hljs-string">&#x27;DbConnector&#x27;</span> (https://github.com/username/DbConnector.git) registered <span class="hljs-keyword">for</span> path <span class="hljs-string">&#x27;DbConnector&#x27;</span><br>Cloning into <span class="hljs-string">&#x27;/Users/apple/Downloads/MainProject/DbConnector&#x27;</span>...<br>remote: Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0<br>Submodule path <span class="hljs-string">&#x27;DbConnector&#x27;</span>: checked out <span class="hljs-string">&#x27;42c390a15689a128dd017f1ca38b267af1c206c8&#x27;</span><br></code></pre></td></tr></table></figure><p>现在我们有了两个 MainProject，一个是原本的，一个是克隆的，目前两个仓库里的内容是一模一样的，现在让它们的分支产生分叉。来到克隆过后的 MainProject 里的子模块 DbConnector</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git checkout master<br></code></pre></td></tr></table></figure><p>在代码中添加<code>return 0;</code>，如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DbConnector&quot;</span>);<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>并在子模块中提交</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git commit -am <span class="hljs-string">&#x27;add return 0;&#x27;</span><br>[master 24cfc12] add <span class="hljs-built_in">return</span> 0;<br> 1 file changed, 1 insertion(+)<br></code></pre></td></tr></table></figure><p>下面是解决问题的关键！关键！关键！重要的事情说三遍！首先切换回克隆的主项目目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">cd</span> ..<br></code></pre></td></tr></table></figure><p>运行<code>git status</code>我们可以看到我们的修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git status<br>On branch master<br>Your branch is up to <span class="hljs-built_in">date</span> with <span class="hljs-string">&#x27;origin/master&#x27;</span>.<br><br>Changes not staged <span class="hljs-keyword">for</span> commit:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)<br>  (use <span class="hljs-string">&quot;git checkout -- &lt;file&gt;...&quot;</span> to discard changes <span class="hljs-keyword">in</span> working directory)<br><br>modified:   DbConnector (new commits)<br><br>no changes added to commit (use <span class="hljs-string">&quot;git add&quot;</span> and/or <span class="hljs-string">&quot;git commit -a&quot;</span>)<br></code></pre></td></tr></table></figure><p>我们必须把在子项目修改的内容在主项目再提交一次</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git commit -am <span class="hljs-string">&#x27;add return 0;&#x27;</span><br>[master febe029] add <span class="hljs-built_in">return</span> 0;<br> 1 file changed, 1 insertion(+), 1 deletion(-)<br></code></pre></td></tr></table></figure><p>如果没有提交，当下面使用 <code>git pull</code>命令时，提示信息就不会出现 <code>merge following commits not found</code>,就不会输出和书上一样的结果。现在回到原本的 MainProject 中的子模块，添加与克隆的项目的子模块不一样的提交，如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DbConnector&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在子模块中提交该修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git commit -am <span class="hljs-string">&#x27;add return 1;&#x27;</span><br>[master 1a5f567] add <span class="hljs-built_in">return</span> 1;<br> 1 file changed, 1 insertion(+)<br></code></pre></td></tr></table></figure><p>回到原本的 MainProject 中，把当前的主项目和子模块的提交推向远程分支，使远程分支与克隆过后的分支产生分叉。在 connector.c 文件中添加 <code>return 1;</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">cd</span> ..<br><br>$ git commit -am <span class="hljs-string">&#x27;add return 1;&#x27;</span><br>[master 524639a] add return1;<br> 1 file changed, 1 insertion(+)<br> <br>$ git push --recurse-submodules=on-demand<br>Pushing submodule <span class="hljs-string">&#x27;DbConnector&#x27;</span><br>Enumerating objects: 5, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (5/5), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (3/3), 303 bytes | 303.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 3 (delta 0), reused 0 (delta 0)<br>To https://github.com/username/DbConnector.git<br>   42c390a..1a5f567  master -&gt; master<br>Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (2/2), 302 bytes | 302.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 2 (delta 0), reused 0 (delta 0)<br>To https://github.com/username/MainProject.git<br>   faf7642..f3561d9  master -&gt; master<br></code></pre></td></tr></table></figure><p>然后在克隆的 MainProject 中拉取远程服务器的修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ git pull<br>remote: Enumerating objects: 3, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (3/3), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>remote: Total 2 (delta 0), reused 2 (delta 0), pack-reused 0<br>Unpacking objects: 100% (2/2), <span class="hljs-keyword">done</span>.<br>From https://github.com/username/MainProject<br>   faf7642..f3561d9  master     -&gt; origin/master<br>Fetching submodule DbConnector<br>From https://github.com/username/DbConnector<br>   42c390a..1a5f567  master     -&gt; origin/master<br>Failed to merge submodule DbConnector (merge following commits not found)<br>Auto-merging DbConnector<br>CONFLICT (submodule): Merge conflict <span class="hljs-keyword">in</span> DbConnector<br>Automatic merge failed; fix conflicts and <span class="hljs-keyword">then</span> commit the result.<br></code></pre></td></tr></table></figure><p>这样就出现和书中一样的结果了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Pro Git</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macOS 环境下，Virtualbox 安装 Win10 虚拟机，装了插件包，改了配置文件，USB 还是不能用</title>
    <link href="/2020/04/27/macOS-%E7%8E%AF%E5%A2%83%E4%B8%8B%EF%BC%8CVirtualbox-%E5%AE%89%E8%A3%85-Win10-%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8C%E8%A3%85%E4%BA%86%E6%8F%92%E4%BB%B6%E5%8C%85%EF%BC%8C%E6%94%B9%E4%BA%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8CUSB-%E8%BF%98%E6%98%AF%E4%B8%8D%E8%83%BD%E7%94%A8/"/>
    <url>/2020/04/27/macOS-%E7%8E%AF%E5%A2%83%E4%B8%8B%EF%BC%8CVirtualbox-%E5%AE%89%E8%A3%85-Win10-%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8C%E8%A3%85%E4%BA%86%E6%8F%92%E4%BB%B6%E5%8C%85%EF%BC%8C%E6%94%B9%E4%BA%86%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8CUSB-%E8%BF%98%E6%98%AF%E4%B8%8D%E8%83%BD%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>查过了网上的绝大多数文章，Virtualbox 在 macOS 环境下安装 Win10 虚拟机 USB 不能用的解决办法，无非就是叫我们装插件包，然后改名字为 <em>group</em> 的配置文件，在文件里面找到<code>vboxusers:x:126:</code>并在后面添加自己的用户名，而我的配置文件里面没找到这行，所以只能自己加上<code>vboxusers:x:126:apple</code>，但是usb还是不能用。</p><h2 id="办法"><a href="#办法" class="headerlink" title="办法"></a>办法</h2><p>如果你装了插件，改了配置文件，但还是不能用，你就要注意配置文件中你写的那行的序号，比如<code>vboxusers:x:126:apple</code>,其实126这个数字不是固定，而是根据你这行所在位置定的，如果上一个是125，你这个就要写<code>vboxusers:x:126:apple</code>，如果上一个是270，你这个就要写<code>vboxusers:x:271:apple</code>，以此类推，当然 <code>apple</code> 用你的用户名替换。还有一个<code>usbfs:x:272:apple</code>也一样。我的配置文件是下面这样的。</p><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">_timed</span>:*:<span class="hljs-number">266</span>:<br><span class="hljs-attribute">_nearbyd</span>:*:<span class="hljs-number">268</span>:_nearbyd<br><span class="hljs-attribute">_reportmemoryexception</span>:*:<span class="hljs-number">269</span>:_reportmemoryexception<br><span class="hljs-attribute">_driverkit</span>:*:<span class="hljs-number">270</span>:_driverkit<br><span class="hljs-attribute">vboxusers</span>:x:<span class="hljs-number">271</span>:apple<br><span class="hljs-attribute">usbfs</span>:x:<span class="hljs-number">272</span>:apple<br><span class="hljs-attribute">com</span>.apple.access_ftp:*:<span class="hljs-number">395</span>:<br><span class="hljs-attribute">com</span>.apple.access_disabled:*:<span class="hljs-number">396</span>:<br><span class="hljs-attribute">com</span>.apple.access_sessionkey:*:<span class="hljs-number">397</span>:<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>Win10</tag>
      
      <tag>VirtualBox</tag>
      
      <tag>虚拟机</tag>
      
      <tag>USB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macOS 环境下配置 Derby 数据库</title>
    <link href="/2020/04/25/macOS-%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%85%8D%E7%BD%AE-Derby-%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2020/04/25/macOS-%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%85%8D%E7%BD%AE-Derby-%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p>打开终端，即 terminal。<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/terminal.png" alt="terminal"></p><p>创建新的.bash_profile文件（如果有或创建过此文件，跳过此步骤）,输入<br> <figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">touch</span> ~/.bash_profile<br></code></pre></td></tr></table></figure></p><p>打开此文件,输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">open -t ~/.bash_profile<br></code></pre></td></tr></table></figure><p>先对环境变量进行解释：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">JAVA_HOME:</span> Java的安装路径（决定Java和Javac命令能不能用）；<br><span class="hljs-symbol">DERBY_HOME:</span> Derby数据库的安装路径；<br><span class="hljs-symbol">PATH:</span> 终端读取的路径（决定java -jar $DERBY_HOME/<span class="hljs-keyword">lib</span>/derbyrun.jar server start能不能用）；<br><span class="hljs-symbol">CLASSPATH:</span><span class="hljs-keyword">class</span>文件的安装路径（决定java org.apache.derby.tools.ij命令能不能用）；<br></code></pre></td></tr></table></figure><p>接着继续，在刚打开的文件中添加Derby的环境变量。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">export JAVA_HOME=<span class="hljs-regexp">/Library/</span>Java<span class="hljs-regexp">/JavaVirtualMachines/</span>jdk-<span class="hljs-number">10.0</span>.<span class="hljs-number">2</span>.jdk<span class="hljs-regexp">/Contents/</span>Home<br>export DERBY_HOME=<span class="hljs-regexp">/Library/</span>Java/db-derby-<span class="hljs-number">10.14</span>.<span class="hljs-number">2.0</span>-bin<br>export PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$DERBY_HOME</span>:.<br>export CLASSPATH=<span class="hljs-variable">$DERBY_HOME</span><span class="hljs-regexp">/lib/</span>derby.jar:<span class="hljs-variable">$DERBY_HOME</span><span class="hljs-regexp">/lib/</span>derbyclient.jar:<span class="hljs-variable">$DERBY_HOME</span><span class="hljs-regexp">/lib/</span>derbytools.jar:.<br></code></pre></td></tr></table></figure><p>按cmd+s保存文件。 运行文件，使其生效，输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">source</span>  ~/.bash_profile<br></code></pre></td></tr></table></figure><p>查看Derby信息，输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">java org.apache.derby.tools.sysinfo<br></code></pre></td></tr></table></figure><p>如果弹出以下内容则说明配置成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">------------------ Java 信息 ------------------<br>Java Version:    10.0.2<br>Java Vendor:     Oracle Corporation<br>Java home:       /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre<br>Java classpath:  /Users/me/src:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derby.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derby.war:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_cs.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_de_DE.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_es.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_fr.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_hu.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_it.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_ja_JP.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_ko_KR.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_pl.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_pt_BR.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_ru.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_zh_CN.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyLocale_zh_TW.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyclient.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbynet.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyoptionaltools.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbyrun.jar:/Users/me/sw/z/db-derby-10.14.2.0-bin/lib/derbytools.jar:/Users/me/sw/db2jcc/lib/db2jcc.jar:/Users/me/sw/db2jcc/lib/db2jcc_license_c.jar:/Users/me/sw/mysql/connectorj/mysql-connector-java-5.0.7/mysql-connector-java-5.0.7-bin.jar:/Users/me/sw/demo/jdbc.concurrent/jars/jdbc-concurrent.jar:/Users/me/sw/demo/tableFunctionWhitePaper/jars/vtis-example.jar<br>OS name:         Mac OS X<br>OS architecture: x64_64<br>OS version:      10.11.5<br>Java user name:  me<br>Java user home:  /Users/me<br>Java user <span class="hljs-built_in">dir</span>:   /Users/me/derby/branches/10.14<br>java.specification.name: Java Platform API Specification<br>java.specification.version: 1.8<br>java.runtime.version: 1.8.0-b132<br>----------------- Derby 信息 ------------------<br>[/Library/Java/db-derby-10.14.2.0-bin/lib/derby.jar] 10.14.2.0 - (1828579)<br>[/Library/Java/db-derby-10.14.2.0-bin/lib/derbytools.jar] 10.14.2.0 - (1828579)<br>---------------- 区域设置信息 ------------------<br></code></pre></td></tr></table></figure><p>接着，启动ij环境，输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">java org.apache.derby.tools.ij<br></code></pre></td></tr></table></figure><p>显示如下内容表示启动成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">ij 版本 10.14<br>ij&gt; <br></code></pre></td></tr></table></figure><p>接着输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">java -jar <span class="hljs-variable">$DERBY_HOME</span>/lib/derbyrun.jar server start<br></code></pre></td></tr></table></figure><p>启动Derby数据库服务器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">MacBook:~ apple$ java -jar <span class="hljs-variable">$DERBY_HOME</span>/lib/derbyrun.jar server start<br>Fri Oct 05 16:28:00 CST 2018 : 已使用基本服务器安全策略安装了 Security Manager。<br>Fri Oct 05 16:28:22 CST 2018 : Apache Derby 网络服务器 - 10.14.2.0 - (1828579) 已启动并准备接受端口 1527 上的连接<br></code></pre></td></tr></table></figure><p>到这里说明Derby数据库和服务器配置成功啦。</p>]]></content>
    
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>Derby</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My Dream in the New Era</title>
    <link href="/2020/04/23/My-Dream-in-the-New-Era/"/>
    <url>/2020/04/23/My-Dream-in-the-New-Era/</url>
    
    <content type="html"><![CDATA[<p>As the rapid development of modern science and Internet technology, we are living in a new era, which features information appliance with information communicating and exchanging through Internet. President Xi proposed that we must strengthen the construction of information infrastructure, promote the deep integration of information resources and open up the “big artery” of information for economic and social development. Thus, creating and developing information technology help to build digital China. As a college student majoring in computer application technology in Information Engineering Department, I dream to be a software engineer.</p><p>In such information era, social economic structure in China centers on service industry, which aims at meeting the needs of people’s better life. In addition, knowledge innovation is the main trend of society development. I always consider how to apply the knowledge learned from my major to create useful and significant computer software to help people solve the problems in life or at work. At present, I have an idea to explore auto fire alarm software. So how did this idea come about? Last term, when I returned to school, I found a big fire in the mountain at the back of our dormitory building. In no time, high wind with dense smoke blew into our dormitory district. Immediately and urgently, I called 119. Then, the fireman on the phone asked me where it was. I was so nervous and spent a lot of effort to make it clear. As the mountain was too big, I couldn’t provide him with a very specific address. Finally, the firemen found the address and extinguished the fire. Afterwards, I wondered if there was any way for firemen to receive the locating map online in computer or smart phone. In such way, fire site could be chased immediately. Thus, I imagine creating auto fire alarm software. </p><p>In my imagination, the auto fire alarm software should possess the following function. Firstly, this software can capture the data of the weather, climate and geographical situation of the every location of the city at all times. Secondly, it can analyze the irregular data immediately according to the statistics of temperature, wind, air quality and so on. Thirdly, once the software inspects the irregular data of a location, it will automatically trigger a fire alarm by sending the GSP locating map of the fire to target receivers. The fire center can easily apply the software in the computer of the call center or smart phone of every fireman to receive the data. Every citizen should also install the software into smart phone so as to get informed of the fire or send the witnessed photos to the fire center. If this is achieved, it will greatly shorten the time of rescuing and evacuating the people in the fire spot.</p><p>Realizing the significance of creating the auto fire alarm software, I am excited and eager to chase my dream right now. As a college student in grade one, I feel it crucial to master the core knowledge of software programming. In addition, I want to form an association at college to attract members who have great passion in this field. I also hope to receive support from my teachers to get precious supervision in the process of exploring the software of such kind.</p><p> President Xi suggests that we roll up our sleeves and work with added energy to fulfill our dream. In the new era, I believe I can achieve my dream! I believe we can achieve our China Dream!</p>]]></content>
    
    
    
    <tags>
      
      <tag>第六届岭南杯英语写作技能大赛</tag>
      
      <tag>金笔奖</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 环境下用 caps lock 切换输入法</title>
    <link href="/2020/04/22/ubuntu-%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%94%A8-caps-lock-%E5%88%87%E6%8D%A2%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    <url>/2020/04/22/ubuntu-%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%94%A8-caps-lock-%E5%88%87%E6%8D%A2%E8%BE%93%E5%85%A5%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="安装-Gnome-Tweak（已安装可跳过）"><a href="#安装-Gnome-Tweak（已安装可跳过）" class="headerlink" title="安装 Gnome Tweak（已安装可跳过）"></a>安装 Gnome Tweak（已安装可跳过）</h2><p>打开 Terminal (终端），输入以下代码安装 Gnome Tweak</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">sudo apt-get install gnome-tweak-tool<br></code></pre></td></tr></table></figure><p>安装过程中遇到下面这句话</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Do you want to <span class="hljs-built_in">continue</span>? [Y/n]<br></code></pre></td></tr></table></figure><p>输入Y，按下回车即可继续安装。下面的命令如果遇到相同的情况，也是同样的操作，下文将不再赘述。<br>如果应用程序中能找到以下图标，表示安装成功。&#96;&#96;<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/tweaks.png" alt="tweaks"></p><h2 id="用-Gnome-Tweak-把-caps-lock-改成-menu-键"><a href="#用-Gnome-Tweak-把-caps-lock-改成-menu-键" class="headerlink" title="用 Gnome Tweak 把 caps lock 改成 menu 键"></a>用 Gnome Tweak 把 caps lock 改成 menu 键</h2><p>打开 Tweaks，依次点击 Keyboard&amp;Mouse -&gt; Additional Layout Options<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/tweaks-keyboard-mouse.png" alt="tweaks-keyboard-mouse"></p><p>续依次点击 Caps Lock behavior -&gt; Make Caps Lock an additional Menu key，设置自动保存，关闭窗口即可。<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/additional-layout-options.png" alt="additional-layout-options"></p><h2 id="安装谷歌拼音输入法"><a href="#安装谷歌拼音输入法" class="headerlink" title="安装谷歌拼音输入法"></a>安装谷歌拼音输入法</h2><p>安装汉语语言包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install language-pack-zh-hans<br></code></pre></td></tr></table></figure><p>安装谷歌拼音输入法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo apt-get install fcitx-googlepinyin<br></code></pre></td></tr></table></figure><p>打开 Language Support<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/language-support.png" alt="language-support"></p><p>初次打开需要安装，点击install进行安装。<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/language-support-pop-up.png" alt="language-support-pop-up"></p><p>在 Keyboard input method system: 中，选择fcitx。<img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/fcitx.png" alt="fcitx"></p><p>关闭窗口，重启系统后，任务栏右边图标出现键盘一样图标，就说明安装成功了。</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/task-bar.png" alt="task-bar"></p><p>接下来，在应用程序中找到 Fcitx Config Tool，点击打开</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/fcitx-config-tool.png" alt="fcitx-config-tool"></p><p>也可以用 Terminal 输入以下命令打开</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">fcitx-configtool<br></code></pre></td></tr></table></figure><p>点击加号添加输入法<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/input-method-configuration.png" alt="input-method-configuration"></p><p>去掉 Only Show Current Language 前面的勾，并在下面的搜索框输入 google，上面的框出现 Google Pinyin 后点击选中，点击 OK。</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/google-pinyin.png" alt="google-pinyin"><br>点击 Global Config，点击下图编号为2的位置，接下来会有一个弹窗，这时按下键盘上的 caps lock 键，设置成功后的效果如下图所示。关闭窗口，即可使用 caps lock 切换输入法。<br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/global-config.png" alt="global-config"></p>]]></content>
    
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>ubuntu</tag>
      
      <tag>linux</tag>
      
      <tag>caps lock</tag>
      
      <tag>输入法切换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么我放弃了百度</title>
    <link href="/2019/10/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%94%BE%E5%BC%83%E4%BA%86%E7%99%BE%E5%BA%A6/"/>
    <url>/2019/10/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%94%BE%E5%BC%83%E4%BA%86%E7%99%BE%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<p>一个简单的理由，根据reliablesoft.net上的相关文章，在全球范围内的搜索引擎，Google排第一，Bing排第二，在国内谷歌用不了，所以直接上Bing吧。这是简单的一个理由，但是作为受过高等教育人的人当然不能就这么算了，你可能会问，这是什么鬼网站，权威吗，即使权威我们也不能迷信权威是吧，况且这个排行的评价标准是什么，根据用户数量，盈利多少还是搜索次数，所以，以上理由显然不够说服力。那什么是一个好的评价搜索引擎的标准呢，我认为应该是搜索结果的客观性和准确性，而这体现在两个方面，一是搜索算法，二是广告投放方式。因为搜索算法方面比较复杂，超过了我现在的能力范围，所以这里不作解释，文末有相关链接，可以点击查看。那现在我们来看看<a href="http://e.baidu.com/product/sousuo/?refer=888">百度的广告投放方式</a>。</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/baidu-knowledge-marketing.png" alt="baidu-knowledge-marketing"></p><p>在百度的搜索推广中，其中值得注意的是品牌推广，官方的介绍为“您可以在用户处于潜在需求阶段，在百度知道与您自身业务相关的问题上植入广告。您通过回答问题的方式生成专属的问题页面，在搜索结果页、知道详情页展现。用户在查阅答案时就不知不觉查看了广告“，我们来具体看看怎么回事，现在用百度搜索“手机哪个牌子好”，果然出现了百度知道的结果，然后点进去呢，就出现了商家的回答。</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/which-brand-of-cell-phone-quality-is-good.png" alt="which-brand-of-cell-phone-quality-is-good"><br><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/which-brand-of-cell-phone-quality-is-good-2.png" alt="which-brand-of-cell-phone-quality-is-good-2"></p><p>由上图可以清楚地看到，回答的都是手机厂商，“黄婆卖瓜，自卖自夸”。老司机的话还好，可以一眼就认出来，但是老一辈的，比如我们的父母，也许一查就看了个广告而且还不自知，要是遇到产品确实做的不错的商家还好，但是这又有谁能保证呢。以前我经常查阅百度知道的答案，现在想想都脊背发凉。目前，我知道的就这些，如果有新发现便会对此文章更新。下面是我收集到的相关资料，大家可以点击查看。</p><p>相关资料：</p><ol><li><a href="http://xr.byxiaorun.com/g/index.php?q=oKipp7eAc2SouLqdvc7c2ZjHrcilwtXpet7L4nvD2-FkdIiHqc7M4aqvc9KkmZ7esNiQzM-W5dumdsTek6HJZw">Top 10 Search Engines In The World</a></li><li><a href="http://xr.byxiaorun.com/g/index.php?q=oKipp7eAc2STrbLWedHl0qrVsNdgtt7ie93H4Le04NqlqofOpdmY4qyouNCeX5ress7RyNQ">The Top 7 Search Engines, Ranked by Popularity</a></li><li><a href="https://mp.weixin.qq.com/s/OL-WcP0LgGktNgL5yd1hiQ">《搜索引擎百度已死》</a></li><li><a href="/Users/xiongzhihong/Desktop/s/1.https:/www.bilibili.com/video/av41533916?from=search&seid=11029629120569689165">我为什么要写《搜索引擎百度已死》？</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>百度</tag>
      
      <tag>搜索引擎</tag>
      
      <tag>广告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三下乡记录</title>
    <link href="/2019/07/04/%E4%B8%89%E4%B8%8B%E4%B9%A1%E8%AE%B0%E5%BD%95/"/>
    <url>/2019/07/04/%E4%B8%89%E4%B8%8B%E4%B9%A1%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>盛夏已经来临，为了践行“全心全意为人民服务”这个宗旨，亲身体验农村生活，以及了解当今农村的发展现状，我参加了信工系的暑期三下乡活动，我们的队名叫 ”Freesky”，下乡的地点是阳江市阳东区大沟镇的三丫村。</p><p>在启程之前，我们需要挣够自己生活经费以及要给乡亲们捐赠的物资，于是我们决定从这两种方式获得，第一，我们参加了赞助商的投票活动，排名靠前就有物质拿；第二，在校内发起绿色回收活动。于是，我们走遍学校的每一个宿舍拉票以获得捐给小朋友的物资，经过三个晚上的努力，我们从原来的几百名闯进前十，排名第八。接着，我们齐心协力，联系需要回收的同学，并把他们的废品从每一间宿舍集中在一起进行售卖，剩下没卖出去的就联系回收商，转手卖给他们。在这次活动中我锻炼了团结协作以及调用外部资源的能力，在走访宿舍的过程中见到了许多不一样的风景，一 个宿舍一个世界。在这次活动中，我做的比较好的地方是运用了手机上的 Excel 表格计算回收来的物品的重量以及对应价格，这使得我们的团队能快速，准确地计算出当前已回收物品的数量，交易的金额，以及最后的净利润，这使得我们在交易过程中不吃亏。</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/carry-a-burden.jpg" alt="carry-a-burden"></p><p>刚来到三丫村，一个新建的学校，地板明亮干净，4G 信号满格。第一天早上，我们挨家挨户上门走访，发现他们家里都有宽带网络，这些都跟我想象的不太一样，看来我们国家在电信方面的功夫下得不浅。果然“实践是检验真理的唯一标准”。</p><p>三下乡的第一天，走出学校，一眼望下去都是农田，地形非常平坦，看着这广阔的田野上，有些许农民，村里的人不多，我想这是我们国家农业生产效率提高的缘故，农业生产不需要那么多人就能生产出足够的粮食，这是从农业方面对我们国家经济发展事实的一个证明。我们打算帮乡亲们干农活，我们穿上拖鞋，走在田间，边走边问农民们有没有需要帮忙的，也许是因为不好意思，也许是觉得我们做不好，也许是担心我们弄脏身子，都纷纷说:”不用，不用“，见此，我们直接把鞋晾在一边，光着脚丫直接跳入了田里，农民伯伯见我们这么热心也就答应了我们。接着，就开始干活啦，首先，我们把秧盘摆好，而且每个秧盘要对齐，不能超过土胚的位置，铺好后，再上面抹肥料，先把肥料倒进秧盘，然后用手把它抹均匀，让肥料填满秧盘的洞洞，弄完之后就在播种。经过下田，我深刻理解”实践出真知“这句话，我们上学的时候，老师和书本都告诉我们农民很辛苦，但是究竟有多辛苦，要亲身体会才能深刻体会。活干完之后，筋疲力尽，农民伯伯纷纷表示感谢，看到农民伯伯的笑容，内心感到无比的满足。这里我觉我干的比较好的就是不怕脏，不怕累，遗憾的是一些技术活没能帮上忙。</p><p><img src="https://image-1257345150.cos.ap-guangzhou.myqcloud.com/farming.jpg" alt="farming"></p><p>三下乡的第二天，我们去了敬老院。敬老院的房子有两排，分布在大门的两侧，这是国家给村里房子非常破旧并且没有钱换房子的老人建的。来到这里我们先给他们送去我们挣到的物资，每个人一桶油，一袋米，然后我们给院大门的树清理杂草。到了晚上，我们来到文化广场，举办了一个晚会，但是刚开始的时候有一个村民说家里刚从外面寄过来一台电脑，但是不会组装，于是我就过去帮忙了。起初，我装好后发现不能运行，找了很久都不知道哪里出了问题，最后微信联系了他们的儿子，还是没检查出来，电脑可以运转，但是就是没有开机画面，我猜应该是内存条掉出来了，所以我决定拆开电脑的后盖，一看究竟，拆开电脑后盖，果然，内存条掉出来了，装回去，电脑就完美运行啦。这里我运用了自己专业知识帮助了村民，做的不好的是在我离开晚会时，没有找人顶替我的工作，导致我那个岗位的空缺，也多亏队友的帮忙，晚会举办顺利且成功。</p><p>第三天，我们坐上汽车，三下乡就这样结束了，回想这几天，我们的收获是那么多。我体会到了一个团队为了一个目标共同奋斗的乐趣、农民伯伯的辛苦和帮助他人的美好体验，我相信，只要我们一起努力，农村会变得更加美好，我们的国家会变得更加美好。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
